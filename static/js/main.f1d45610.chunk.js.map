{"version":3,"sources":["components/Container/Container.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/Section/Section.module.css","components/Container/Container.module.css"],"names":["Container","children","className","s","Section","title","ContactForm","state","name","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","console","log","props","onSubmit","reset","this","htmlFor","nameInputId","type","onChange","pattern","required","numberInputId","Component","ContactList","contacts","onDeleteContact","length","map","id","onClick","Filter","App","filter","formSubmitHandler","newContact","nanoid","find","contact","alert","prevState","deleteContact","contactId","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f1d45610.chunk.js","sourcesContent":["import s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nexport default Container;\n","import s from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.Section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  console.log(contacts);\r\n\r\n  return (\r\n    <ul>\r\n      <p>Total amount of contacts: {contacts.length}</p>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button onClick={() => onDeleteContact(id)}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { nanoid } from 'nanoid';\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = ({ name, number }) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    const similarContact = contacts.find(\n      contact => contact.name === newContact.name,\n    );\n    if (similarContact) {\n      return alert('This name is allready exist');\n    }\n\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredContacts = this.getVisibleContacts();\n    return (\n      <>\n        <Section title={'Phonebook'}>\n          <Container>\n            <ContactForm onSubmit={this.formSubmitHandler} />\n          </Container>\n        </Section>\n        <Section title={'Contacts'}>\n          <Container>\n            <Filter value={filter} onChange={this.changeFilter} />\n            <ContactList\n              contacts={filteredContacts}\n              onDeleteContact={this.deleteContact}\n            />\n          </Container>\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1tMLF\",\"title\":\"Section_title__3OA_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1BXC9\"};"],"sourceRoot":""}